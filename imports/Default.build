<?xml version="1.0" ?>
<project basedir="." default="build">
  <property name="svnBuildType" value="tag" overwrite="false" />
  <property name="libgit2BuildType" value="tag" overwrite="false" />
  <property name="serfBuildType" value="tag" overwrite="false" />
  <property name="libgit2BuildType" value="tag" overwrite="false" />
  <property name="httpdBuildType" value="tag" overwrite="false" />
  
  <property name="guessedPlatform" value="win32" />
  <if test="${environment::variable-exists('LIB')}">
    <property name="guessedPlatform" value="x64" if="${string::contains(string::to-upper(environment::get-variable('LIB')),'LIB\AMD64')}" />
  </if>

  <property name="platform" value="${guessedPlatform}" if="${not property::exists('platform')}" />

  <property name="libgit2Version" value="0.21.0" overwrite="false" />
  <!-- r1575018              - Properly store author when retrieving directory entries -->
  <property name="aprMerges" value="" overwrite="false" />
  <property name="aprutilMerges" value="" overwrite="false" />

  <property name="buildLibgit2" value="true" overwrite="false" />

  <property name="opensslVersion" value="1.0.1h" overwrite="false" />
  <property name="aprVersion" value="1.5.1" overwrite="false" />
  <property name="aprUtilVersion" value="1.5.3" overwrite="false" />
  <property name="expatVersion" value="2.0.1" overwrite="false" />
  <property name="zlibVersion" value="1.2.8" overwrite="false" />
  <property name="libssh2Version" value="1.4.3" overwrite="false" />

  <!-- Building only -->
  <property name="nasmVersion" value="2.10.01" overwrite="false" />
  <property name="cmakeVersion" value="2.8.12.2" overwrite="false" />
  
  <!-- For testcase -->
  <property name="nunitVersion" value="2.6.2" overwrite="false" />
  <property name="junitVersion" value="4.8.1" overwrite="false" />

  <!-- Prefer http or https -->
  <property name="httpOrHttps" value="http" />

  <!-- Prefix to use for dependency DLL's -->
  <property name="dllPrefix" value="SharpSvn-" overwrite="false" />

  <include buildfile="scripts/default.build" />

  <target name="help">
    <echo>
      The following targets are defined
      - build      - Build all
      - clean      - Clean all
      - distclean  - Clean all + clean downloads
      - clean-svn  - Clean+Update subversion

      Use nant /D:platform=x64 to build/clean the x64 binaries if autodetect fails

      The following targets try to start nant within the specified context using vcvars.cmd
      - x86
      - x64
    </echo>
  </target>
</project>
